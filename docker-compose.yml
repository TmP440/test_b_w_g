version: '3.8'
#
services:
  fastapi-docker:
    container_name: fastapi-docker
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5051:5051"
    depends_on:
      postgres-docker:
        condition: service_healthy
      nats-docker:
        condition: service_started
      redis-docker:
        condition: service_started

  # Nats service
  nats-docker:
    image: nats:latest
    ports:
      - "4222:4222"

  # Redis service
  redis-docker:
    image: "redis:latest"
    ports:
      - "6379:6379"

  # PostgreSQL service
  postgres-docker:
    image: "postgres:latest"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: test_b_w
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
        interval: 5s
        timeout: 10s
        retries: 5
        start_period: 10s

  # InfluxDB service
  influxdb-docker:
    image: influxdb:latest
    container_name: influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=user
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=b_w_g
      - DOCKER_INFLUXDB_INIT_BUCKET=alert_metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb
    healthcheck:
      test: [ "CMD", "curl", "localhost:8086/ping" ]
      interval: 1m
      timeout: 10s
      retries: 5

  # Grafana service
  grafana-docker:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
    ports:
      - "3000:3000"
    depends_on:
      - influxdb-docker
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
      postgres-data:
      influxdb-data:
      grafana-data:

